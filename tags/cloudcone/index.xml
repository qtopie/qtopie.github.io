<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cloudcone on Blog | qtopierw</title><link>https://qtopie.github.io/tags/cloudcone/</link><description>Recent content in cloudcone on Blog | qtopierw</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>qtopie.rw@gmail.com (qtopierw)</managingEditor><webMaster>qtopie.rw@gmail.com (qtopierw)</webMaster><copyright>Posts licensed under &lt;a href="https://creativecommons.org/licenses/by/4.0/legalcode">CC BY 4.0</copyright><lastBuildDate>Sat, 18 Jul 2020 22:02:05 +0800</lastBuildDate><atom:link href="https://qtopie.github.io/tags/cloudcone/index.xml" rel="self" type="application/rss+xml"/><item><title>使用API自动开/关机cloudcone主机</title><link>https://qtopie.github.io/posts/diy/cloudcone-save-costs/</link><pubDate>Sat, 18 Jul 2020 22:02:05 +0800</pubDate><author>qtopie.rw@gmail.com (qtopierw)</author><guid>https://qtopie.github.io/posts/diy/cloudcone-save-costs/</guid><description>Cloudcone是2017年成立于美国的一家主机供应商。继vultr变得“不靠谱”和低价vm资源经常“售尽”的情况下，我转而使用cloudcone提供的vps服务用于日常学习和开发。
除了支持按小时计费、提供更换IP服务及支持支付宝/paypal等灵活的支付方式外，我最看重的是，它的价格能做到真正的弹性，即在vm关机状态不计费CPU/内存等费用,比online费用大概减半。
类似于其他云供应商平台，cloudcone还提供了开放的API来管理云主机。
这里为了方便使用和合理控制资源，自己便用go写了一个小程序
代码实现 主要逻辑如下，通过cloudcone 提供的API。每天晚上23左右关机，次日早晨7点左右启动 如果调用失败的话，会再次重试一次。(如果依然不行的话，就当运气不好了:&amp;lt;）
以下是草稿版本代码
secret.go package main var ( // 配置相关信息,这里我填写的是假的啦 serverID = 123456 appSecret = &amp;#34;Q2aQr9323QE233r2&amp;#34; hashCode = &amp;#34;zXqV22222222222222222222222222222222225bL&amp;#34; ) serverID可以在compute菜单控制面板下查看，或查看浏览器url里的参数。
appSecret和hashCode访问https://app.cloudcone.com/user/api创建即可。
main.go /* * cloudcone api https://api.cloudcone.com/ */ package main import ( &amp;#34;context&amp;#34; &amp;#34;encoding/json&amp;#34; &amp;#34;errors&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;io/ioutil&amp;#34; &amp;#34;log&amp;#34; &amp;#34;net/http&amp;#34; &amp;#34;os&amp;#34; &amp;#34;sync&amp;#34; &amp;#34;time&amp;#34; &amp;#34;github.com/robfig/cron&amp;#34; ) // CloudconeResponse represents the API Response type CloudconeResponse struct { Status int Message string Data interface{} `json:&amp;#34;_data&amp;#34;` } const ( baseAPIURL = &amp;#34;https://api.</description></item></channel></rss>