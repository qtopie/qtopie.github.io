<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on Blog | qtopierw</title><link>https://qtopie.github.io/tags/go/</link><description>Recent content in go on Blog | qtopierw</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>qtopie.rw@gmail.com (qtopierw)</managingEditor><webMaster>qtopie.rw@gmail.com (qtopierw)</webMaster><copyright>Posts licensed under &lt;a href="https://creativecommons.org/licenses/by/4.0/legalcode">CC BY 4.0</copyright><lastBuildDate>Wed, 18 Mar 2020 22:02:05 +0800</lastBuildDate><atom:link href="https://qtopie.github.io/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Go安装</title><link>https://qtopie.github.io/posts/go/setup-go/</link><pubDate>Wed, 18 Mar 2020 22:02:05 +0800</pubDate><author>qtopie.rw@gmail.com (qtopierw)</author><guid>https://qtopie.github.io/posts/go/setup-go/</guid><description>官方下载安装向导请参考这里https://golang.org/dl/
这篇文章主要分享加速访问go依赖和资源站点的问题。
环境 Ubuntu 19.10 x86_64 版本号 go1.14 linux/amd64 下载安装 Go安装文件可以访问国内站点 https://golang.google.cn/dl/
解压后，移动到/usr/local/go目录，然后在/etc/profile里加入
export GOROOT=/usr/local/go export PATH=$PATH:$GOROOT/bin 使用技巧 goproxy 使用goproxy加速go module下载(解决go get无法下载来自golang.org等站点的依赖包的问题）
参考https://goproxy.io/zh/, 在go 1.13+下，我们可以使用以下命令在go env设置goproxy
go env -w GO111MODULE=on go env -w GOPROXY=https://goproxy.io,direct # 设置不走 proxy 的私有仓库，多个用逗号相隔（可选） go env -w GOPRIVATE=*.corp.example.com 同样推荐使用国内站点https://goproxy.cn/
文档查看 使用go doc命令可以在终端快速查阅文档, 例如 go doc net.Listen | vim - 参考</description></item></channel></rss>