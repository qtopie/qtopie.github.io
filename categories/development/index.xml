<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on Blog | qtopierw</title><link>https://qtopie.github.io/categories/development/</link><description>Recent content in Development on Blog | qtopierw</description><generator>Hugo</generator><language>en-us</language><managingEditor>qtopie.rw@gmail.com (qtopierw)</managingEditor><webMaster>qtopie.rw@gmail.com (qtopierw)</webMaster><copyright>Posts licensed under &lt;a href="https://creativecommons.org/licenses/by/4.0/legalcode">CC BY 4.0</copyright><lastBuildDate>Wed, 18 Mar 2020 22:02:05 +0800</lastBuildDate><atom:link href="https://qtopie.github.io/categories/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Go安装</title><link>https://qtopie.github.io/notes/go/setup-go/</link><pubDate>Wed, 18 Mar 2020 22:02:05 +0800</pubDate><author>qtopie.rw@gmail.com (qtopierw)</author><guid>https://qtopie.github.io/notes/go/setup-go/</guid><description>&lt;p>官方下载安装向导请参考这里https://golang.org/dl/&lt;/p>
&lt;p>这篇文章主要分享加速访问go依赖和资源站点的问题。&lt;/p>
&lt;h2 id="环境">环境&lt;/h2>
&lt;ul>
&lt;li>Ubuntu 19.10 x86_64&lt;/li>
&lt;li>版本号 go1.14 linux/amd64&lt;/li>
&lt;/ul>
&lt;h2 id="下载安装">下载安装&lt;/h2>
&lt;p>Go安装文件可以访问国内站点 &lt;a href="https://golang.google.cn/dl/">https://golang.google.cn/dl/&lt;/a>&lt;/p>
&lt;p>解压后，移动到&lt;code>/usr/local/go&lt;/code>目录，然后在&lt;code>/etc/profile&lt;/code>里加入&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">export&lt;/span> &lt;span style="color:#033">GOROOT&lt;/span>&lt;span style="color:#555">=&lt;/span>/usr/local/go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">export&lt;/span> &lt;span style="color:#033">PATH&lt;/span>&lt;span style="color:#555">=&lt;/span>&lt;span style="color:#033">$PATH&lt;/span>:&lt;span style="color:#033">$GOROOT&lt;/span>/bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用技巧">使用技巧&lt;/h2>
&lt;h3 id="goproxy">goproxy&lt;/h3>
&lt;p>使用goproxy加速&lt;code>go module&lt;/code>下载(解决&lt;code>go get&lt;/code>无法下载来自golang.org等站点的依赖包的问题）&lt;/p>
&lt;p>参考https://goproxy.io/zh/, 在go 1.13+下，我们可以使用以下命令在go env设置goproxy&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>go env -w &lt;span style="color:#033">GO111MODULE&lt;/span>&lt;span style="color:#555">=&lt;/span>on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go env -w &lt;span style="color:#033">GOPROXY&lt;/span>&lt;span style="color:#555">=&lt;/span>https://goproxy.io,direct
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#09f;font-style:italic"># 设置不走 proxy 的私有仓库，多个用逗号相隔（可选）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>go env -w &lt;span style="color:#033">GOPRIVATE&lt;/span>&lt;span style="color:#555">=&lt;/span>*.corp.example.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pr</description></item><item><title>Make Eclipse Great Again</title><link>https://qtopie.github.io/notes/dev/make-gradle-work-with-eclipse/</link><pubDate>Sat, 28 Dec 2019 18:07:28 +0800</pubDate><author>qtopie.rw@gmail.com (qtopierw)</author><guid>https://qtopie.github.io/notes/dev/make-gradle-work-with-eclipse/</guid><description>&lt;h1 id="eclipse--gradle">Eclipse &amp;amp; Gradle&lt;/h1>
&lt;p>还是从那句老话开始， “工欲善其事，必先利其器”。要想熟练地完成一件事，有个好的工具往往能事半功倍。&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>但是很多时候，迷信教条最终会成了造轮子而造轮子的递归循环；选择合适的工具，并掌握它，解决好问题才是正确的方向。&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>这里简单说说，我选择Eclispe和Gradle的原因。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Gradle (Gradle VS Maven or Ant); 选择gradle的原因很简单，简单而清晰的语法，强大的脚本语言，快速而稳定的构建。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Eclipse (主要对比Idea, VS Code)&lt;/p>
&lt;ul>
&lt;li>开源及活跃而广受欢迎的社区&lt;/li>
&lt;li>相对于Idea来说，个人使用经验上来看，在大Project上使用（源码多，项目多）更稳定, 且有偏向支持开源社区的因素，故使用Eclipse；VS Code对于小的Project来说还好，功能比Eclipse弱，查看多个文件及源码也不是很方便，大项目会使系统卡顿，但是小项目一般可以使用gradle + vim。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="开发环境">开发环境&lt;/h2>
&lt;p>当前开发环境&lt;/p>
&lt;ul>
&lt;li>Ubuntu 19.10 x86_64&lt;/li>
&lt;li>Gradle 5.6.4&lt;/li>
&lt;li>Eclipse (Snap版本)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>Eclipse Platform
Version: 2019-03 (4.11)
Build id: I20190307-0500
OS: Linux, v.5.3.0-24-generic, x86_64 / gtk 3.24.12
Java version: 1.8.0_171
&lt;/code>&lt;/pr</description></item><item><title>Git快速手册</title><link>https://qtopie.github.io/notes/dev/git-quick-guide/</link><pubDate>Wed, 05 Jul 2017 00:00:00 +0000</pubDate><author>qtopie.rw@gmail.com (qtopierw)</author><guid>https://qtopie.github.io/notes/dev/git-quick-guide/</guid><description>&lt;p>&lt;strong>WIP&lt;/strong>&lt;/p>
&lt;h2 id="快速开始">快速开始&lt;/h2>
&lt;ul>
&lt;li>设置个人信息&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git config --global user.name &amp;lt;YOUR-NAME&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --global user.email &amp;lt;YOUR-EMAIL&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#09f;font-style:italic"># 查看个人配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git config --list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>将默认主仓库设置为&lt;code>main&lt;/code> &lt;a href="https://github.com/github/renaming">BLM运动&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git config --global init.defaultbranch main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>初始化仓库&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f3f3;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir /path/to/your/project
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#366">cd&lt;/span> /path/to/your/project
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git init 			&lt;span style="color:#09f;font-style:italic"># initialize an empty git repo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git remote add origin git@repo-url.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pr</description></item></channel></rss>